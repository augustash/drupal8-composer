////////////////////////////////////////////////////////////////////////////////
/// Theme Structure
/// -------
/// Place all base structures here.
////////////////////////////////////////////////////////////////////////////////

// Theme support.
$palette: map-merge($global-colors, $colors);

.exo-component-wrapper {
  color: color(theme-black);

  &.exo-modifier--text-shadow {
    text-shadow: 0px 2px 5px alpha(theme-white, 0.5);
  }

  &.exo-modifier--invert {
    color: color(theme-white);

    &.exo-modifier--text-shadow {
      text-shadow: 0px 2px 5px alpha(theme-black, 0.5);
    }
  }

  a {
    color: color(theme-primary);
  }
}

@each $name, $color in $palette {
  .exo-modifier--color-bg-#{$name} {
    $base: theme-white;
    $offset: theme-black;
    @if lightness(color($name)) < 60% {
      $base: theme-black;
      $offset: theme-white;
    }

    background-color: color($name);
    color: color($offset);

    a {
      @if $name == theme-primary {
        color: color($offset);
        font-weight: 700;
        text-decoration: underline;
      }
      // color: color-fix($name, theme-primary, 3%, 40%, 2);
    }

    &.exo-modifier--text-shadow {
      text-shadow: 0px 2px 8px darken(alpha($name, 0.5), 30%);
    }

    &.exo-modifier--invert {
      color: color($base);
    }

    &.exo-modifier--overlay {

      .exo-component {

        &:before {
          background-color: color($base);
        }
      }

      &.exo-modifier--invert {

        .exo-component {

          &:before {
            background-color: color($offset);
          }
        }
      }
    }
  }
}

.exo-component-selection {

  a {
    background-color: color(theme-primary);

    &:hover,
    &:active {
      border-color: color(theme-primary);
      box-shadow: 0 0 15px alpha(theme-primary, 0.4);

      .exo-component-label {
        opacity: 0.9;
      }
    }
  }
}
