<?php

/**
 * @file
 * Contains exo_aos.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;

/**
 * Implements hook_help().
 */
function exo_aos_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the exo_aos module.
    case 'help.page.exo_aos':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Provides support for the AOS library for animations on scroll.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Provides theme registration for themes across .inc files.
 */
function exo_aos_theme() {
  return [
    'exo_aos' => [
      'render element' => 'element',
      'file' => 'exo_aos.theme',
    ],
  ];
}

/**
 * Implements hook_entity_view_alter().
 */
function exo_aos_entity_view_alter(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display) {
  foreach ($display->getComponents() as $field_name => $component) {
    if (isset($component['type']) && $component['type'] == 'exo_aos') {
      $field = $entity->get($field_name);
      if (!$field->isEmpty()) {
        $settings = !empty($field->value['aos']) ? $field->value['aos'] : [];
        $aos = \Drupal::service('exo_aos.generator')->generate($settings);
        if (!empty($component['settings']['to_field'])) {
          if (!empty($build[$component['settings']['to_field']])) {
            $aos->applyTo($build[$component['settings']['to_field']]);
          }
        }
        else {
          $aos->applyTo($build);
        }
      }
    }
  }
}
